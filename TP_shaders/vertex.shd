#version 450

in vec3 position;
in vec3 normalFlat;
in vec3 normalSmooth;
in vec3 color;
in vec2 uv;

vec3 light_color = vec3(1.0, 1.0, 1.0);
vec3 light_position = vec3(1.0, 1.0, 5.0);

out vec4 fragment_color;
out vec2 uv_position;
vec3 normal;
vec4 light_dir;

mat4 model_view_matrix = mat4(
			      0.57735, -0.33333, 0.57735, 0.00000,
			      0.00000, 0.66667, 0.57735, 0.00000,
			      -0.57735, -0.33333, 0.57735, 0.00000,
			      0.00000, 0.00000, -17, 1.00000);
mat4 projection_matrix = mat4(
			      5.00000, 0.00000, 0.00000, 0.00000,
			      0.00000, 5.00000, 0.00000, 0.00000,
			      0.00000, 0.00000, -1.00020, -1.00000,
			      0.00000, 0.00000, -10.00100, 0.00000);

void main() {
	gl_Position = projection_matrix * model_view_matrix * vec4(position, 1.0);
	normal = normalize(normalSmooth);
	light_dir = vec4(light_position-position.xyz,1);
	float coef = dot(normalize(normal.xyz),normalize(light_dir.xyz));
	coef = clamp(coef,0,1);
	fragment_color = vec4(vec3(1,1,1)*coef,1.0);
	uv_position = uv;
}
